// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// slope_error_cpp
arma::vec slope_error_cpp(const arma::vec& err, double nu_slo, double ga_slo);
RcppExport SEXP _TVS_slope_error_cpp(SEXP errSEXP, SEXP nu_sloSEXP, SEXP ga_sloSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type err(errSEXP);
    Rcpp::traits::input_parameter< double >::type nu_slo(nu_sloSEXP);
    Rcpp::traits::input_parameter< double >::type ga_slo(ga_sloSEXP);
    rcpp_result_gen = Rcpp::wrap(slope_error_cpp(err, nu_slo, ga_slo));
    return rcpp_result_gen;
END_RCPP
}
// curvature_error_cpp
arma::vec curvature_error_cpp(const arma::vec& err, double nu_cur, double ga_cur);
RcppExport SEXP _TVS_curvature_error_cpp(SEXP errSEXP, SEXP nu_curSEXP, SEXP ga_curSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type err(errSEXP);
    Rcpp::traits::input_parameter< double >::type nu_cur(nu_curSEXP);
    Rcpp::traits::input_parameter< double >::type ga_cur(ga_curSEXP);
    rcpp_result_gen = Rcpp::wrap(curvature_error_cpp(err, nu_cur, ga_cur));
    return rcpp_result_gen;
END_RCPP
}
// CiS_j_fun_cpp
double CiS_j_fun_cpp(int test_index, const arma::vec& beta_opt, double beta0_opt, double nu_opt, double ga_opt, Rcpp::List dataXY, double add_correc_CiS);
RcppExport SEXP _TVS_CiS_j_fun_cpp(SEXP test_indexSEXP, SEXP beta_optSEXP, SEXP beta0_optSEXP, SEXP nu_optSEXP, SEXP ga_optSEXP, SEXP dataXYSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type test_index(test_indexSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_opt(beta_optSEXP);
    Rcpp::traits::input_parameter< double >::type beta0_opt(beta0_optSEXP);
    Rcpp::traits::input_parameter< double >::type nu_opt(nu_optSEXP);
    Rcpp::traits::input_parameter< double >::type ga_opt(ga_optSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(CiS_j_fun_cpp(test_index, beta_opt, beta0_opt, nu_opt, ga_opt, dataXY, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// per_fun_cpp
double per_fun_cpp(int j_index, Rcpp::List dataXY, arma::vec init_beta_per, double init_beta0_per, double init_nu_per, double init_gamma_per, double init_theta_per, double SS_t0_per, double SS_t1_per, double hyper_mu_beta0_per, double hyper_sigma_beta0_per, double hyper_mu_nu_per, double hyper_sigma_nu_per, double hyper_c_gamma_per, double hyper_d_gamma_per, double hyper_a_theta_per, double hyper_b_theta_per, int max_iter_per, double tol_per, double add_correc_CiS);
RcppExport SEXP _TVS_per_fun_cpp(SEXP j_indexSEXP, SEXP dataXYSEXP, SEXP init_beta_perSEXP, SEXP init_beta0_perSEXP, SEXP init_nu_perSEXP, SEXP init_gamma_perSEXP, SEXP init_theta_perSEXP, SEXP SS_t0_perSEXP, SEXP SS_t1_perSEXP, SEXP hyper_mu_beta0_perSEXP, SEXP hyper_sigma_beta0_perSEXP, SEXP hyper_mu_nu_perSEXP, SEXP hyper_sigma_nu_perSEXP, SEXP hyper_c_gamma_perSEXP, SEXP hyper_d_gamma_perSEXP, SEXP hyper_a_theta_perSEXP, SEXP hyper_b_theta_perSEXP, SEXP max_iter_perSEXP, SEXP tol_perSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type j_index(j_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta_per(init_beta_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0_per(init_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_nu_per(init_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma_per(init_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta_per(init_theta_perSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0_per(SS_t0_perSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1_per(SS_t1_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0_per(hyper_mu_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0_per(hyper_sigma_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu_per(hyper_mu_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu_per(hyper_sigma_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma_per(hyper_c_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma_per(hyper_d_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta_per(hyper_a_theta_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta_per(hyper_b_theta_perSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_per(max_iter_perSEXP);
    Rcpp::traits::input_parameter< double >::type tol_per(tol_perSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(per_fun_cpp(j_index, dataXY, init_beta_per, init_beta0_per, init_nu_per, init_gamma_per, init_theta_per, SS_t0_per, SS_t1_per, hyper_mu_beta0_per, hyper_sigma_beta0_per, hyper_mu_nu_per, hyper_sigma_nu_per, hyper_c_gamma_per, hyper_d_gamma_per, hyper_a_theta_per, hyper_b_theta_per, max_iter_per, tol_per, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// CiS_group_fun_cpp
double CiS_group_fun_cpp(const arma::uvec& test_indices, const arma::vec& beta_opt, double beta0_opt, double nu_opt, double ga_opt, Rcpp::List dataXY, double add_correc_CiS);
RcppExport SEXP _TVS_CiS_group_fun_cpp(SEXP test_indicesSEXP, SEXP beta_optSEXP, SEXP beta0_optSEXP, SEXP nu_optSEXP, SEXP ga_optSEXP, SEXP dataXYSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uvec& >::type test_indices(test_indicesSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_opt(beta_optSEXP);
    Rcpp::traits::input_parameter< double >::type beta0_opt(beta0_optSEXP);
    Rcpp::traits::input_parameter< double >::type nu_opt(nu_optSEXP);
    Rcpp::traits::input_parameter< double >::type ga_opt(ga_optSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(CiS_group_fun_cpp(test_indices, beta_opt, beta0_opt, nu_opt, ga_opt, dataXY, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// per_group_fun_cpp
double per_group_fun_cpp(const arma::uvec& j_indices, Rcpp::List dataXY, arma::vec init_beta_per, double init_beta0_per, double init_nu_per, double init_gamma_per, double init_theta_per, double SS_t0_per, double SS_t1_per, double hyper_mu_beta0_per, double hyper_sigma_beta0_per, double hyper_mu_nu_per, double hyper_sigma_nu_per, double hyper_c_gamma_per, double hyper_d_gamma_per, double hyper_a_theta_per, double hyper_b_theta_per, int max_iter_per, double tol_per, double add_correc_CiS);
RcppExport SEXP _TVS_per_group_fun_cpp(SEXP j_indicesSEXP, SEXP dataXYSEXP, SEXP init_beta_perSEXP, SEXP init_beta0_perSEXP, SEXP init_nu_perSEXP, SEXP init_gamma_perSEXP, SEXP init_theta_perSEXP, SEXP SS_t0_perSEXP, SEXP SS_t1_perSEXP, SEXP hyper_mu_beta0_perSEXP, SEXP hyper_sigma_beta0_perSEXP, SEXP hyper_mu_nu_perSEXP, SEXP hyper_sigma_nu_perSEXP, SEXP hyper_c_gamma_perSEXP, SEXP hyper_d_gamma_perSEXP, SEXP hyper_a_theta_perSEXP, SEXP hyper_b_theta_perSEXP, SEXP max_iter_perSEXP, SEXP tol_perSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uvec& >::type j_indices(j_indicesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta_per(init_beta_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0_per(init_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_nu_per(init_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma_per(init_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta_per(init_theta_perSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0_per(SS_t0_perSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1_per(SS_t1_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0_per(hyper_mu_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0_per(hyper_sigma_beta0_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu_per(hyper_mu_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu_per(hyper_sigma_nu_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma_per(hyper_c_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma_per(hyper_d_gamma_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta_per(hyper_a_theta_perSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta_per(hyper_b_theta_perSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_per(max_iter_perSEXP);
    Rcpp::traits::input_parameter< double >::type tol_per(tol_perSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(per_group_fun_cpp(j_indices, dataXY, init_beta_per, init_beta0_per, init_nu_per, init_gamma_per, init_theta_per, SS_t0_per, SS_t1_per, hyper_mu_beta0_per, hyper_sigma_beta0_per, hyper_mu_nu_per, hyper_sigma_nu_per, hyper_c_gamma_per, hyper_d_gamma_per, hyper_a_theta_per, hyper_b_theta_per, max_iter_per, tol_per, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// TVS_EM_cpp
Rcpp::List TVS_EM_cpp(Rcpp::List dataXY, arma::vec init_beta, double init_beta0, double init_nu, double init_gamma, double init_theta, double SS_t0, double SS_t1, double hyper_mu_beta0, double hyper_sigma_beta0, double hyper_mu_nu, double hyper_sigma_nu, double hyper_c_gamma, double hyper_d_gamma, double hyper_a_theta, double hyper_b_theta, int max_iter, double tol, std::string conv_type);
RcppExport SEXP _TVS_TVS_EM_cpp(SEXP dataXYSEXP, SEXP init_betaSEXP, SEXP init_beta0SEXP, SEXP init_nuSEXP, SEXP init_gammaSEXP, SEXP init_thetaSEXP, SEXP SS_t0SEXP, SEXP SS_t1SEXP, SEXP hyper_mu_beta0SEXP, SEXP hyper_sigma_beta0SEXP, SEXP hyper_mu_nuSEXP, SEXP hyper_sigma_nuSEXP, SEXP hyper_c_gammaSEXP, SEXP hyper_d_gammaSEXP, SEXP hyper_a_thetaSEXP, SEXP hyper_b_thetaSEXP, SEXP max_iterSEXP, SEXP tolSEXP, SEXP conv_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta(init_betaSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0(init_beta0SEXP);
    Rcpp::traits::input_parameter< double >::type init_nu(init_nuSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma(init_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta(init_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0(SS_t0SEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1(SS_t1SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0(hyper_mu_beta0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0(hyper_sigma_beta0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu(hyper_mu_nuSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu(hyper_sigma_nuSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma(hyper_c_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma(hyper_d_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta(hyper_a_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta(hyper_b_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< std::string >::type conv_type(conv_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(TVS_EM_cpp(dataXY, init_beta, init_beta0, init_nu, init_gamma, init_theta, SS_t0, SS_t1, hyper_mu_beta0, hyper_sigma_beta0, hyper_mu_nu, hyper_sigma_nu, hyper_c_gamma, hyper_d_gamma, hyper_a_theta, hyper_b_theta, max_iter, tol, conv_type));
    return rcpp_result_gen;
END_RCPP
}
// TVS_cpp
Rcpp::List TVS_cpp(Rcpp::List dataXY, arma::vec init_beta_TVS, int B, double sig_cutoff, double init_beta0_TVS, double init_nu_TVS, double init_gamma_TVS, double init_theta_TVS, double SS_t0_TVS, double SS_t1_TVS, double hyper_mu_beta0_TVS, double hyper_sigma_beta0_TVS, double hyper_mu_nu_TVS, double hyper_sigma_nu_TVS, double hyper_c_gamma_TVS, double hyper_d_gamma_TVS, double hyper_a_theta_TVS, double hyper_b_theta_TVS, int max_iter_TVS, double tol_TVS, double add_correc_CiS);
RcppExport SEXP _TVS_TVS_cpp(SEXP dataXYSEXP, SEXP init_beta_TVSSEXP, SEXP BSEXP, SEXP sig_cutoffSEXP, SEXP init_beta0_TVSSEXP, SEXP init_nu_TVSSEXP, SEXP init_gamma_TVSSEXP, SEXP init_theta_TVSSEXP, SEXP SS_t0_TVSSEXP, SEXP SS_t1_TVSSEXP, SEXP hyper_mu_beta0_TVSSEXP, SEXP hyper_sigma_beta0_TVSSEXP, SEXP hyper_mu_nu_TVSSEXP, SEXP hyper_sigma_nu_TVSSEXP, SEXP hyper_c_gamma_TVSSEXP, SEXP hyper_d_gamma_TVSSEXP, SEXP hyper_a_theta_TVSSEXP, SEXP hyper_b_theta_TVSSEXP, SEXP max_iter_TVSSEXP, SEXP tol_TVSSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta_TVS(init_beta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type sig_cutoff(sig_cutoffSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0_TVS(init_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_nu_TVS(init_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma_TVS(init_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta_TVS(init_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0_TVS(SS_t0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1_TVS(SS_t1_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0_TVS(hyper_mu_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0_TVS(hyper_sigma_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu_TVS(hyper_mu_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu_TVS(hyper_sigma_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma_TVS(hyper_c_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma_TVS(hyper_d_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta_TVS(hyper_a_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta_TVS(hyper_b_theta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_TVS(max_iter_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type tol_TVS(tol_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(TVS_cpp(dataXY, init_beta_TVS, B, sig_cutoff, init_beta0_TVS, init_nu_TVS, init_gamma_TVS, init_theta_TVS, SS_t0_TVS, SS_t1_TVS, hyper_mu_beta0_TVS, hyper_sigma_beta0_TVS, hyper_mu_nu_TVS, hyper_sigma_nu_TVS, hyper_c_gamma_TVS, hyper_d_gamma_TVS, hyper_a_theta_TVS, hyper_b_theta_TVS, max_iter_TVS, tol_TVS, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// TVS_j_cpp
Rcpp::List TVS_j_cpp(int test_index, Rcpp::List dataXY, arma::vec init_beta_TVS, int B, double sig_cutoff, double init_beta0_TVS, double init_nu_TVS, double init_gamma_TVS, double init_theta_TVS, double SS_t0_TVS, double SS_t1_TVS, double hyper_mu_beta0_TVS, double hyper_sigma_beta0_TVS, double hyper_mu_nu_TVS, double hyper_sigma_nu_TVS, double hyper_c_gamma_TVS, double hyper_d_gamma_TVS, double hyper_a_theta_TVS, double hyper_b_theta_TVS, int max_iter_TVS, double tol_TVS, double add_correc_CiS);
RcppExport SEXP _TVS_TVS_j_cpp(SEXP test_indexSEXP, SEXP dataXYSEXP, SEXP init_beta_TVSSEXP, SEXP BSEXP, SEXP sig_cutoffSEXP, SEXP init_beta0_TVSSEXP, SEXP init_nu_TVSSEXP, SEXP init_gamma_TVSSEXP, SEXP init_theta_TVSSEXP, SEXP SS_t0_TVSSEXP, SEXP SS_t1_TVSSEXP, SEXP hyper_mu_beta0_TVSSEXP, SEXP hyper_sigma_beta0_TVSSEXP, SEXP hyper_mu_nu_TVSSEXP, SEXP hyper_sigma_nu_TVSSEXP, SEXP hyper_c_gamma_TVSSEXP, SEXP hyper_d_gamma_TVSSEXP, SEXP hyper_a_theta_TVSSEXP, SEXP hyper_b_theta_TVSSEXP, SEXP max_iter_TVSSEXP, SEXP tol_TVSSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type test_index(test_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta_TVS(init_beta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type sig_cutoff(sig_cutoffSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0_TVS(init_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_nu_TVS(init_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma_TVS(init_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta_TVS(init_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0_TVS(SS_t0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1_TVS(SS_t1_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0_TVS(hyper_mu_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0_TVS(hyper_sigma_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu_TVS(hyper_mu_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu_TVS(hyper_sigma_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma_TVS(hyper_c_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma_TVS(hyper_d_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta_TVS(hyper_a_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta_TVS(hyper_b_theta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_TVS(max_iter_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type tol_TVS(tol_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(TVS_j_cpp(test_index, dataXY, init_beta_TVS, B, sig_cutoff, init_beta0_TVS, init_nu_TVS, init_gamma_TVS, init_theta_TVS, SS_t0_TVS, SS_t1_TVS, hyper_mu_beta0_TVS, hyper_sigma_beta0_TVS, hyper_mu_nu_TVS, hyper_sigma_nu_TVS, hyper_c_gamma_TVS, hyper_d_gamma_TVS, hyper_a_theta_TVS, hyper_b_theta_TVS, max_iter_TVS, tol_TVS, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// TVS_multi_stage_cpp
Rcpp::List TVS_multi_stage_cpp(Rcpp::List dataXY, arma::vec init_beta_TVS, int group_B, int indiv_B, int B_final, double group_cutoff, double indiv_cutoff, double sig_cutoff, int group_size, double init_beta0_TVS, double init_nu_TVS, double init_gamma_TVS, double init_theta_TVS, double SS_t0_TVS, double SS_t1_TVS, double hyper_mu_beta0_TVS, double hyper_sigma_beta0_TVS, double hyper_mu_nu_TVS, double hyper_sigma_nu_TVS, double hyper_c_gamma_TVS, double hyper_d_gamma_TVS, double hyper_a_theta_TVS, double hyper_b_theta_TVS, int max_iter_TVS, double tol_TVS, double add_correc_CiS);
RcppExport SEXP _TVS_TVS_multi_stage_cpp(SEXP dataXYSEXP, SEXP init_beta_TVSSEXP, SEXP group_BSEXP, SEXP indiv_BSEXP, SEXP B_finalSEXP, SEXP group_cutoffSEXP, SEXP indiv_cutoffSEXP, SEXP sig_cutoffSEXP, SEXP group_sizeSEXP, SEXP init_beta0_TVSSEXP, SEXP init_nu_TVSSEXP, SEXP init_gamma_TVSSEXP, SEXP init_theta_TVSSEXP, SEXP SS_t0_TVSSEXP, SEXP SS_t1_TVSSEXP, SEXP hyper_mu_beta0_TVSSEXP, SEXP hyper_sigma_beta0_TVSSEXP, SEXP hyper_mu_nu_TVSSEXP, SEXP hyper_sigma_nu_TVSSEXP, SEXP hyper_c_gamma_TVSSEXP, SEXP hyper_d_gamma_TVSSEXP, SEXP hyper_a_theta_TVSSEXP, SEXP hyper_b_theta_TVSSEXP, SEXP max_iter_TVSSEXP, SEXP tol_TVSSEXP, SEXP add_correc_CiSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataXY(dataXYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_beta_TVS(init_beta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type group_B(group_BSEXP);
    Rcpp::traits::input_parameter< int >::type indiv_B(indiv_BSEXP);
    Rcpp::traits::input_parameter< int >::type B_final(B_finalSEXP);
    Rcpp::traits::input_parameter< double >::type group_cutoff(group_cutoffSEXP);
    Rcpp::traits::input_parameter< double >::type indiv_cutoff(indiv_cutoffSEXP);
    Rcpp::traits::input_parameter< double >::type sig_cutoff(sig_cutoffSEXP);
    Rcpp::traits::input_parameter< int >::type group_size(group_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type init_beta0_TVS(init_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_nu_TVS(init_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma_TVS(init_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type init_theta_TVS(init_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t0_TVS(SS_t0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type SS_t1_TVS(SS_t1_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0_TVS(hyper_mu_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0_TVS(hyper_sigma_beta0_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_nu_TVS(hyper_mu_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_nu_TVS(hyper_sigma_nu_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c_gamma_TVS(hyper_c_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d_gamma_TVS(hyper_d_gamma_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_a_theta_TVS(hyper_a_theta_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_b_theta_TVS(hyper_b_theta_TVSSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_TVS(max_iter_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type tol_TVS(tol_TVSSEXP);
    Rcpp::traits::input_parameter< double >::type add_correc_CiS(add_correc_CiSSEXP);
    rcpp_result_gen = Rcpp::wrap(TVS_multi_stage_cpp(dataXY, init_beta_TVS, group_B, indiv_B, B_final, group_cutoff, indiv_cutoff, sig_cutoff, group_size, init_beta0_TVS, init_nu_TVS, init_gamma_TVS, init_theta_TVS, SS_t0_TVS, SS_t1_TVS, hyper_mu_beta0_TVS, hyper_sigma_beta0_TVS, hyper_mu_nu_TVS, hyper_sigma_nu_TVS, hyper_c_gamma_TVS, hyper_d_gamma_TVS, hyper_a_theta_TVS, hyper_b_theta_TVS, max_iter_TVS, tol_TVS, add_correc_CiS));
    return rcpp_result_gen;
END_RCPP
}
// beta_neg_lk_cpp
double beta_neg_lk_cpp(arma::vec beta_lk, double beta0_lk, double nu_lk, double ga_lk, arma::vec betaPRE, double t0, double t1, arma::vec Y_lk, arma::mat X_lk, double theta_lk);
RcppExport SEXP _TVS_beta_neg_lk_cpp(SEXP beta_lkSEXP, SEXP beta0_lkSEXP, SEXP nu_lkSEXP, SEXP ga_lkSEXP, SEXP betaPRESEXP, SEXP t0SEXP, SEXP t1SEXP, SEXP Y_lkSEXP, SEXP X_lkSEXP, SEXP theta_lkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta_lk(beta_lkSEXP);
    Rcpp::traits::input_parameter< double >::type beta0_lk(beta0_lkSEXP);
    Rcpp::traits::input_parameter< double >::type nu_lk(nu_lkSEXP);
    Rcpp::traits::input_parameter< double >::type ga_lk(ga_lkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betaPRE(betaPRESEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_lk(Y_lkSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_lk(X_lkSEXP);
    Rcpp::traits::input_parameter< double >::type theta_lk(theta_lkSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_neg_lk_cpp(beta_lk, beta0_lk, nu_lk, ga_lk, betaPRE, t0, t1, Y_lk, X_lk, theta_lk));
    return rcpp_result_gen;
END_RCPP
}
// beta_neg_gradient_cpp
arma::vec beta_neg_gradient_cpp(arma::vec beta_lk, double beta0_lk, double ga_lk, double nu_lk, arma::vec betaPRE, double t0, double t1, arma::vec Y_lk, arma::mat X_lk, double theta_lk);
RcppExport SEXP _TVS_beta_neg_gradient_cpp(SEXP beta_lkSEXP, SEXP beta0_lkSEXP, SEXP ga_lkSEXP, SEXP nu_lkSEXP, SEXP betaPRESEXP, SEXP t0SEXP, SEXP t1SEXP, SEXP Y_lkSEXP, SEXP X_lkSEXP, SEXP theta_lkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta_lk(beta_lkSEXP);
    Rcpp::traits::input_parameter< double >::type beta0_lk(beta0_lkSEXP);
    Rcpp::traits::input_parameter< double >::type ga_lk(ga_lkSEXP);
    Rcpp::traits::input_parameter< double >::type nu_lk(nu_lkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betaPRE(betaPRESEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_lk(Y_lkSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_lk(X_lkSEXP);
    Rcpp::traits::input_parameter< double >::type theta_lk(theta_lkSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_neg_gradient_cpp(beta_lk, beta0_lk, ga_lk, nu_lk, betaPRE, t0, t1, Y_lk, X_lk, theta_lk));
    return rcpp_result_gen;
END_RCPP
}
// beta0_neg_lk_cpp
double beta0_neg_lk_cpp(double beta0_lk, arma::vec beta_lk, double nu_lk, double gamma_lk, double hyper_mu_beta0, double hyper_sigma_beta0, arma::vec Y_lk, arma::mat X_lk);
RcppExport SEXP _TVS_beta0_neg_lk_cpp(SEXP beta0_lkSEXP, SEXP beta_lkSEXP, SEXP nu_lkSEXP, SEXP gamma_lkSEXP, SEXP hyper_mu_beta0SEXP, SEXP hyper_sigma_beta0SEXP, SEXP Y_lkSEXP, SEXP X_lkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type beta0_lk(beta0_lkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_lk(beta_lkSEXP);
    Rcpp::traits::input_parameter< double >::type nu_lk(nu_lkSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_lk(gamma_lkSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu_beta0(hyper_mu_beta0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma_beta0(hyper_sigma_beta0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_lk(Y_lkSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_lk(X_lkSEXP);
    rcpp_result_gen = Rcpp::wrap(beta0_neg_lk_cpp(beta0_lk, beta_lk, nu_lk, gamma_lk, hyper_mu_beta0, hyper_sigma_beta0, Y_lk, X_lk));
    return rcpp_result_gen;
END_RCPP
}
// nu_neg_lk_cpp
double nu_neg_lk_cpp(double nu_lk, double ga_lk, Rcpp::NumericVector error_lk, double hyper_mu, double hyper_sigma);
RcppExport SEXP _TVS_nu_neg_lk_cpp(SEXP nu_lkSEXP, SEXP ga_lkSEXP, SEXP error_lkSEXP, SEXP hyper_muSEXP, SEXP hyper_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nu_lk(nu_lkSEXP);
    Rcpp::traits::input_parameter< double >::type ga_lk(ga_lkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type error_lk(error_lkSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_mu(hyper_muSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_sigma(hyper_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(nu_neg_lk_cpp(nu_lk, ga_lk, error_lk, hyper_mu, hyper_sigma));
    return rcpp_result_gen;
END_RCPP
}
// gamma_neg_lk_cpp
double gamma_neg_lk_cpp(double ga_lk, double nu_lk, Rcpp::NumericVector error_lk, double hyper_c, double hyper_d);
RcppExport SEXP _TVS_gamma_neg_lk_cpp(SEXP ga_lkSEXP, SEXP nu_lkSEXP, SEXP error_lkSEXP, SEXP hyper_cSEXP, SEXP hyper_dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type ga_lk(ga_lkSEXP);
    Rcpp::traits::input_parameter< double >::type nu_lk(nu_lkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type error_lk(error_lkSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_c(hyper_cSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_d(hyper_dSEXP);
    rcpp_result_gen = Rcpp::wrap(gamma_neg_lk_cpp(ga_lk, nu_lk, error_lk, hyper_c, hyper_d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TVS_slope_error_cpp", (DL_FUNC) &_TVS_slope_error_cpp, 3},
    {"_TVS_curvature_error_cpp", (DL_FUNC) &_TVS_curvature_error_cpp, 3},
    {"_TVS_CiS_j_fun_cpp", (DL_FUNC) &_TVS_CiS_j_fun_cpp, 7},
    {"_TVS_per_fun_cpp", (DL_FUNC) &_TVS_per_fun_cpp, 20},
    {"_TVS_CiS_group_fun_cpp", (DL_FUNC) &_TVS_CiS_group_fun_cpp, 7},
    {"_TVS_per_group_fun_cpp", (DL_FUNC) &_TVS_per_group_fun_cpp, 20},
    {"_TVS_TVS_EM_cpp", (DL_FUNC) &_TVS_TVS_EM_cpp, 19},
    {"_TVS_TVS_cpp", (DL_FUNC) &_TVS_TVS_cpp, 21},
    {"_TVS_TVS_j_cpp", (DL_FUNC) &_TVS_TVS_j_cpp, 22},
    {"_TVS_TVS_multi_stage_cpp", (DL_FUNC) &_TVS_TVS_multi_stage_cpp, 26},
    {"_TVS_beta_neg_lk_cpp", (DL_FUNC) &_TVS_beta_neg_lk_cpp, 10},
    {"_TVS_beta_neg_gradient_cpp", (DL_FUNC) &_TVS_beta_neg_gradient_cpp, 10},
    {"_TVS_beta0_neg_lk_cpp", (DL_FUNC) &_TVS_beta0_neg_lk_cpp, 8},
    {"_TVS_nu_neg_lk_cpp", (DL_FUNC) &_TVS_nu_neg_lk_cpp, 5},
    {"_TVS_gamma_neg_lk_cpp", (DL_FUNC) &_TVS_gamma_neg_lk_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_TVS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
